/*
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydocker.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydocker.myDocker.Docker

@ExtendWith(InjectionExtension)
@InjectWith(MyDockerInjectorProvider)
class MyDockerParsingTest {
	@Inject
	ParseHelper<Docker> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''FROM a''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
	@Test
	def void testFullDockerfile() {
		val result = parseHelper.parse('''FROM ubuntu:14.04
		
		FROM foo
		
		VOLUME /opt/nagios/var /opt/nagios/etc /opt/nagios/libexec /var/log/apache2 /usr/share/snmp/mibs
		
		RUN echo hello\
		  world\
		  goodnight  \
		  moon\
		  light\
		ning
		RUN echo hello  \
		  world
		RUN echo hello  \
		world
		RUN echo hello \
		goodbye\
		frog
		RUN echo hello  \  
		world
		RUN echo hi \
		 \
		 world \
		\
		 good\
		\
		night
		RUN echo goodbye\
		frog
		RUN echo good\
		bye\
		frog
		
		RUN echo hello \
		# this is a comment
		
		# this is a comment with a blank line surrounding it
		
		this is some more useful stuff
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
}
