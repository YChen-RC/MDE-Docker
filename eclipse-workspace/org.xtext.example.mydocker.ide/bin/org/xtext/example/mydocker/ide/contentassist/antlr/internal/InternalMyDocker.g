/*
 * generated by Xtext 2.30.0
 */
grammar InternalMyDocker;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydocker.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydocker.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydocker.services.MyDockerGrammarAccess;

}
@parser::members {
	private MyDockerGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDockerGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDocker
entryRuleDocker
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SH_COMMENT");
}
:
{ before(grammarAccess.getDockerRule()); }
	 ruleDocker
{ after(grammarAccess.getDockerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Docker
ruleDocker 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SH_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDockerAccess().getCommandsAssignment()); }
		(rule__Docker__CommandsAssignment)*
		{ after(grammarAccess.getDockerAccess().getCommandsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArg
entryRuleArg
:
{ before(grammarAccess.getArgRule()); }
	 ruleArg
{ after(grammarAccess.getArgRule()); } 
	 EOF 
;

// Rule Arg
ruleArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgAccess().getGroup()); }
		(rule__Arg__Group__0)
		{ after(grammarAccess.getArgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCmd
entryRuleCmd
:
{ before(grammarAccess.getCmdRule()); }
	 ruleCmd
{ after(grammarAccess.getCmdRule()); } 
	 EOF 
;

// Rule Cmd
ruleCmd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCmdAccess().getGroup()); }
		(rule__Cmd__Group__0)
		{ after(grammarAccess.getCmdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCopy
entryRuleCopy
:
{ before(grammarAccess.getCopyRule()); }
	 ruleCopy
{ after(grammarAccess.getCopyRule()); } 
	 EOF 
;

// Rule Copy
ruleCopy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCopyAccess().getGroup()); }
		(rule__Copy__Group__0)
		{ after(grammarAccess.getCopyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntrypoint
entryRuleEntrypoint
:
{ before(grammarAccess.getEntrypointRule()); }
	 ruleEntrypoint
{ after(grammarAccess.getEntrypointRule()); } 
	 EOF 
;

// Rule Entrypoint
ruleEntrypoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntrypointAccess().getGroup()); }
		(rule__Entrypoint__Group__0)
		{ after(grammarAccess.getEntrypointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnv
entryRuleEnv
:
{ before(grammarAccess.getEnvRule()); }
	 ruleEnv
{ after(grammarAccess.getEnvRule()); } 
	 EOF 
;

// Rule Env
ruleEnv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvAccess().getGroup()); }
		(rule__Env__Group__0)
		{ after(grammarAccess.getEnvAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpose
entryRuleExpose
:
{ before(grammarAccess.getExposeRule()); }
	 ruleExpose
{ after(grammarAccess.getExposeRule()); } 
	 EOF 
;

// Rule Expose
ruleExpose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExposeAccess().getGroup()); }
		(rule__Expose__Group__0)
		{ after(grammarAccess.getExposeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFrom
entryRuleFrom
:
{ before(grammarAccess.getFromRule()); }
	 ruleFrom
{ after(grammarAccess.getFromRule()); } 
	 EOF 
;

// Rule From
ruleFrom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromAccess().getGroup()); }
		(rule__From__Group__0)
		{ after(grammarAccess.getFromAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHealthcheck
entryRuleHealthcheck
:
{ before(grammarAccess.getHealthcheckRule()); }
	 ruleHealthcheck
{ after(grammarAccess.getHealthcheckRule()); } 
	 EOF 
;

// Rule Healthcheck
ruleHealthcheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHealthcheckAccess().getGroup()); }
		(rule__Healthcheck__Group__0)
		{ after(grammarAccess.getHealthcheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaintainer
entryRuleMaintainer
:
{ before(grammarAccess.getMaintainerRule()); }
	 ruleMaintainer
{ after(grammarAccess.getMaintainerRule()); } 
	 EOF 
;

// Rule Maintainer
ruleMaintainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaintainerAccess().getGroup()); }
		(rule__Maintainer__Group__0)
		{ after(grammarAccess.getMaintainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnbuild
entryRuleOnbuild
:
{ before(grammarAccess.getOnbuildRule()); }
	 ruleOnbuild
{ after(grammarAccess.getOnbuildRule()); } 
	 EOF 
;

// Rule Onbuild
ruleOnbuild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnbuildAccess().getGroup()); }
		(rule__Onbuild__Group__0)
		{ after(grammarAccess.getOnbuildAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRun
entryRuleRun
:
{ before(grammarAccess.getRunRule()); }
	 ruleRun
{ after(grammarAccess.getRunRule()); } 
	 EOF 
;

// Rule Run
ruleRun 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunAccess().getGroup()); }
		(rule__Run__Group__0)
		{ after(grammarAccess.getRunAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShell
entryRuleShell
:
{ before(grammarAccess.getShellRule()); }
	 ruleShell
{ after(grammarAccess.getShellRule()); } 
	 EOF 
;

// Rule Shell
ruleShell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShellAccess().getGroup()); }
		(rule__Shell__Group__0)
		{ after(grammarAccess.getShellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStopSignal
entryRuleStopSignal
:
{ before(grammarAccess.getStopSignalRule()); }
	 ruleStopSignal
{ after(grammarAccess.getStopSignalRule()); } 
	 EOF 
;

// Rule StopSignal
ruleStopSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopSignalAccess().getGroup()); }
		(rule__StopSignal__Group__0)
		{ after(grammarAccess.getStopSignalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUser
entryRuleUser
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserAccess().getGroup()); }
		(rule__User__Group__0)
		{ after(grammarAccess.getUserAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVolume
entryRuleVolume
:
{ before(grammarAccess.getVolumeRule()); }
	 ruleVolume
{ after(grammarAccess.getVolumeRule()); } 
	 EOF 
;

// Rule Volume
ruleVolume 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVolumeAccess().getGroup()); }
		(rule__Volume__Group__0)
		{ after(grammarAccess.getVolumeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkdir
entryRuleWorkdir
:
{ before(grammarAccess.getWorkdirRule()); }
	 ruleWorkdir
{ after(grammarAccess.getWorkdirRule()); } 
	 EOF 
;

// Rule Workdir
ruleWorkdir 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkdirAccess().getGroup()); }
		(rule__Workdir__Group__0)
		{ after(grammarAccess.getWorkdirAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandArgs
entryRuleCommandArgs
:
{ before(grammarAccess.getCommandArgsRule()); }
	 ruleCommandArgs
{ after(grammarAccess.getCommandArgsRule()); } 
	 EOF 
;

// Rule CommandArgs
ruleCommandArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandArgsAccess().getAlternatives()); }
		(rule__CommandArgs__Alternatives)
		{ after(grammarAccess.getCommandArgsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSONArgs
entryRuleJSONArgs
:
{ before(grammarAccess.getJSONArgsRule()); }
	 ruleJSONArgs
{ after(grammarAccess.getJSONArgsRule()); } 
	 EOF 
;

// Rule JSONArgs
ruleJSONArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSONArgsAccess().getAlternatives()); }
		(rule__JSONArgs__Alternatives)
		{ after(grammarAccess.getJSONArgsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpaceArgs
entryRuleSpaceArgs
:
{ before(grammarAccess.getSpaceArgsRule()); }
	 ruleSpaceArgs
{ after(grammarAccess.getSpaceArgsRule()); } 
	 EOF 
;

// Rule SpaceArgs
ruleSpaceArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpaceArgsAccess().getGroup()); }
		(rule__SpaceArgs__Group__0)
		{ after(grammarAccess.getSpaceArgsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameVals
entryRuleNameVals
:
{ before(grammarAccess.getNameValsRule()); }
	 ruleNameVals
{ after(grammarAccess.getNameValsRule()); } 
	 EOF 
;

// Rule NameVals
ruleNameVals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getNameValsAccess().getValuesAssignment()); }
			(rule__NameVals__ValuesAssignment)
			{ after(grammarAccess.getNameValsAccess().getValuesAssignment()); }
		)
		(
			{ before(grammarAccess.getNameValsAccess().getValuesAssignment()); }
			(rule__NameVals__ValuesAssignment)*
			{ after(grammarAccess.getNameValsAccess().getValuesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameVal
entryRuleNameVal
:
{ before(grammarAccess.getNameValRule()); }
	 ruleNameVal
{ after(grammarAccess.getNameValRule()); } 
	 EOF 
;

// Rule NameVal
ruleNameVal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameValAccess().getAlternatives()); }
		(rule__NameVal__Alternatives)
		{ after(grammarAccess.getNameValAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgArgs
entryRuleArgArgs
:
{ before(grammarAccess.getArgArgsRule()); }
	 ruleArgArgs
{ after(grammarAccess.getArgArgsRule()); } 
	 EOF 
;

// Rule ArgArgs
ruleArgArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgArgsAccess().getAlternatives()); }
		(rule__ArgArgs__Alternatives)
		{ after(grammarAccess.getArgArgsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHealthArgs
entryRuleHealthArgs
:
{ before(grammarAccess.getHealthArgsRule()); }
	 ruleHealthArgs
{ after(grammarAccess.getHealthArgsRule()); } 
	 EOF 
;

// Rule HealthArgs
ruleHealthArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHealthArgsAccess().getAlternatives()); }
		(rule__HealthArgs__Alternatives)
		{ after(grammarAccess.getHealthArgsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptions
entryRuleOptions
:
{ before(grammarAccess.getOptionsRule()); }
	 ruleOptions
{ after(grammarAccess.getOptionsRule()); } 
	 EOF 
;

// Rule Options
ruleOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionsAccess().getGroup()); }
		(rule__Options__Group__0)
		{ after(grammarAccess.getOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOption
entryRuleOption
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionAccess().getGroup()); }
		(rule__Option__Group__0)
		{ after(grammarAccess.getOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExposeArgs
entryRuleExposeArgs
:
{ before(grammarAccess.getExposeArgsRule()); }
	 ruleExposeArgs
{ after(grammarAccess.getExposeArgsRule()); } 
	 EOF 
;

// Rule ExposeArgs
ruleExposeArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getExposeArgsAccess().getPortsAssignment()); }
			(rule__ExposeArgs__PortsAssignment)
			{ after(grammarAccess.getExposeArgsAccess().getPortsAssignment()); }
		)
		(
			{ before(grammarAccess.getExposeArgsAccess().getPortsAssignment()); }
			(rule__ExposeArgs__PortsAssignment)*
			{ after(grammarAccess.getExposeArgsAccess().getPortsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExposeArg
entryRuleExposeArg
:
{ before(grammarAccess.getExposeArgRule()); }
	 ruleExposeArg
{ after(grammarAccess.getExposeArgRule()); } 
	 EOF 
;

// Rule ExposeArg
ruleExposeArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExposeArgAccess().getAlternatives()); }
		(rule__ExposeArg__Alternatives)
		{ after(grammarAccess.getExposeArgAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getCommandAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getArgParserRuleCall_1()); }
		ruleArg
		{ after(grammarAccess.getCommandAccess().getArgParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdParserRuleCall_2()); }
		ruleCmd
		{ after(grammarAccess.getCommandAccess().getCmdParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCopyParserRuleCall_3()); }
		ruleCopy
		{ after(grammarAccess.getCommandAccess().getCopyParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getEntrypointParserRuleCall_4()); }
		ruleEntrypoint
		{ after(grammarAccess.getCommandAccess().getEntrypointParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getEnvParserRuleCall_5()); }
		ruleEnv
		{ after(grammarAccess.getCommandAccess().getEnvParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getExposeParserRuleCall_6()); }
		ruleExpose
		{ after(grammarAccess.getCommandAccess().getExposeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getFromParserRuleCall_7()); }
		ruleFrom
		{ after(grammarAccess.getCommandAccess().getFromParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getHealthcheckParserRuleCall_8()); }
		ruleHealthcheck
		{ after(grammarAccess.getCommandAccess().getHealthcheckParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getLabelParserRuleCall_9()); }
		ruleLabel
		{ after(grammarAccess.getCommandAccess().getLabelParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getMaintainerParserRuleCall_10()); }
		ruleMaintainer
		{ after(grammarAccess.getCommandAccess().getMaintainerParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getOnbuildParserRuleCall_11()); }
		ruleOnbuild
		{ after(grammarAccess.getCommandAccess().getOnbuildParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getRunParserRuleCall_12()); }
		ruleRun
		{ after(grammarAccess.getCommandAccess().getRunParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getShellParserRuleCall_13()); }
		ruleShell
		{ after(grammarAccess.getCommandAccess().getShellParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getStopSignalParserRuleCall_14()); }
		ruleStopSignal
		{ after(grammarAccess.getCommandAccess().getStopSignalParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getUserParserRuleCall_15()); }
		ruleUser
		{ after(grammarAccess.getCommandAccess().getUserParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getVolumeParserRuleCall_16()); }
		ruleVolume
		{ after(grammarAccess.getCommandAccess().getVolumeParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getWorkdirParserRuleCall_17()); }
		ruleWorkdir
		{ after(grammarAccess.getCommandAccess().getWorkdirParserRuleCall_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandArgs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandArgsAccess().getJSONArgsParserRuleCall_0()); }
		ruleJSONArgs
		{ after(grammarAccess.getCommandArgsAccess().getJSONArgsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandArgsAccess().getSpaceArgsParserRuleCall_1()); }
		ruleSpaceArgs
		{ after(grammarAccess.getCommandArgsAccess().getSpaceArgsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONArgsAccess().getGroup_0()); }
		(rule__JSONArgs__Group_0__0)
		{ after(grammarAccess.getJSONArgsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSONArgsAccess().getGroup_1()); }
		(rule__JSONArgs__Group_1__0)
		{ after(grammarAccess.getJSONArgsAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameValAccess().getGroup_0()); }
		(rule__NameVal__Group_0__0)
		{ after(grammarAccess.getNameValAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameValAccess().getGroup_1()); }
		(rule__NameVal__Group_1__0)
		{ after(grammarAccess.getNameValAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgArgs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgArgsAccess().getGroup_0()); }
		(rule__ArgArgs__Group_0__0)
		{ after(grammarAccess.getArgArgsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgArgsAccess().getValuesAssignment_1()); }
		(rule__ArgArgs__ValuesAssignment_1)
		{ after(grammarAccess.getArgArgsAccess().getValuesAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthArgsAccess().getTypAssignment_0()); }
		(rule__HealthArgs__TypAssignment_0)
		{ after(grammarAccess.getHealthArgsAccess().getTypAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getHealthArgsAccess().getGroup_1()); }
		(rule__HealthArgs__Group_1__0)
		{ after(grammarAccess.getHealthArgsAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getValueAccess().getIDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getRAW_VALUETerminalRuleCall_2()); }
		RULE_RAW_VALUE
		{ after(grammarAccess.getValueAccess().getRAW_VALUETerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExposeArg__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeArgAccess().getPortAssignment_0()); }
		(rule__ExposeArg__PortAssignment_0)
		{ after(grammarAccess.getExposeArgAccess().getPortAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExposeArgAccess().getPort_protocolAssignment_1()); }
		(rule__ExposeArg__Port_protocolAssignment_1)
		{ after(grammarAccess.getExposeArgAccess().getPort_protocolAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getCmdAssignment_0()); }
	(rule__Add__CmdAssignment_0)
	{ after(grammarAccess.getAddAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getArgsAssignment_1()); }
	(rule__Add__ArgsAssignment_1)
	{ after(grammarAccess.getAddAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arg__Group__0__Impl
	rule__Arg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgAccess().getCmdAssignment_0()); }
	(rule__Arg__CmdAssignment_0)
	{ after(grammarAccess.getArgAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arg__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgAccess().getArgsAssignment_1()); }
	(rule__Arg__ArgsAssignment_1)
	{ after(grammarAccess.getArgAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cmd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cmd__Group__0__Impl
	rule__Cmd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmdAccess().getCmdAssignment_0()); }
	(rule__Cmd__CmdAssignment_0)
	{ after(grammarAccess.getCmdAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cmd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmdAccess().getArgsAssignment_1()); }
	(rule__Cmd__ArgsAssignment_1)
	{ after(grammarAccess.getCmdAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Copy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__0__Impl
	rule__Copy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getCmdAssignment_0()); }
	(rule__Copy__CmdAssignment_0)
	{ after(grammarAccess.getCopyAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getArgsAssignment_1()); }
	(rule__Copy__ArgsAssignment_1)
	{ after(grammarAccess.getCopyAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entrypoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrypoint__Group__0__Impl
	rule__Entrypoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntrypointAccess().getCmdAssignment_0()); }
	(rule__Entrypoint__CmdAssignment_0)
	{ after(grammarAccess.getEntrypointAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrypoint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntrypointAccess().getArgsAssignment_1()); }
	(rule__Entrypoint__ArgsAssignment_1)
	{ after(grammarAccess.getEntrypointAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Env__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Env__Group__0__Impl
	rule__Env__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvAccess().getCmdAssignment_0()); }
	(rule__Env__CmdAssignment_0)
	{ after(grammarAccess.getEnvAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Env__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvAccess().getArgsAssignment_1()); }
	(rule__Env__ArgsAssignment_1)
	{ after(grammarAccess.getEnvAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expose__Group__0__Impl
	rule__Expose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExposeAccess().getCmdAssignment_0()); }
	(rule__Expose__CmdAssignment_0)
	{ after(grammarAccess.getExposeAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expose__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExposeAccess().getArgsAssignment_1()); }
	(rule__Expose__ArgsAssignment_1)
	{ after(grammarAccess.getExposeAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__0__Impl
	rule__From__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getCmdAssignment_0()); }
	(rule__From__CmdAssignment_0)
	{ after(grammarAccess.getFromAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getArgsAssignment_1()); }
	(rule__From__ArgsAssignment_1)
	{ after(grammarAccess.getFromAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Healthcheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Healthcheck__Group__0__Impl
	rule__Healthcheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Healthcheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHealthcheckAccess().getCmdAssignment_0()); }
	(rule__Healthcheck__CmdAssignment_0)
	{ after(grammarAccess.getHealthcheckAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Healthcheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Healthcheck__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Healthcheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHealthcheckAccess().getArgsAssignment_1()); }
	(rule__Healthcheck__ArgsAssignment_1)
	{ after(grammarAccess.getHealthcheckAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getCmdAssignment_0()); }
	(rule__Label__CmdAssignment_0)
	{ after(grammarAccess.getLabelAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getArgsAssignment_1()); }
	(rule__Label__ArgsAssignment_1)
	{ after(grammarAccess.getLabelAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Maintainer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maintainer__Group__0__Impl
	rule__Maintainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaintainerAccess().getCmdAssignment_0()); }
	(rule__Maintainer__CmdAssignment_0)
	{ after(grammarAccess.getMaintainerAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maintainer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaintainerAccess().getArgsAssignment_1()); }
	(rule__Maintainer__ArgsAssignment_1)
	{ after(grammarAccess.getMaintainerAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Onbuild__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Onbuild__Group__0__Impl
	rule__Onbuild__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnbuildAccess().getCmdAssignment_0()); }
	(rule__Onbuild__CmdAssignment_0)
	{ after(grammarAccess.getOnbuildAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Onbuild__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnbuildAccess().getArgsAssignment_1()); }
	(rule__Onbuild__ArgsAssignment_1)
	{ after(grammarAccess.getOnbuildAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Run__Group__0__Impl
	rule__Run__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunAccess().getCmdAssignment_0()); }
	(rule__Run__CmdAssignment_0)
	{ after(grammarAccess.getRunAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Run__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunAccess().getArgsAssignment_1()); }
	(rule__Run__ArgsAssignment_1)
	{ after(grammarAccess.getRunAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shell__Group__0__Impl
	rule__Shell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShellAccess().getCmdAssignment_0()); }
	(rule__Shell__CmdAssignment_0)
	{ after(grammarAccess.getShellAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shell__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShellAccess().getArgsAssignment_1()); }
	(rule__Shell__ArgsAssignment_1)
	{ after(grammarAccess.getShellAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopSignal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopSignal__Group__0__Impl
	rule__StopSignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopSignal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopSignalAccess().getCmdAssignment_0()); }
	(rule__StopSignal__CmdAssignment_0)
	{ after(grammarAccess.getStopSignalAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopSignal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopSignal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopSignal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopSignalAccess().getArgsAssignment_1()); }
	(rule__StopSignal__ArgsAssignment_1)
	{ after(grammarAccess.getStopSignalAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__User__Group__0__Impl
	rule__User__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserAccess().getCmdAssignment_0()); }
	(rule__User__CmdAssignment_0)
	{ after(grammarAccess.getUserAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__User__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserAccess().getArgsAssignment_1()); }
	(rule__User__ArgsAssignment_1)
	{ after(grammarAccess.getUserAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Volume__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Volume__Group__0__Impl
	rule__Volume__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVolumeAccess().getCmdAssignment_0()); }
	(rule__Volume__CmdAssignment_0)
	{ after(grammarAccess.getVolumeAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Volume__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVolumeAccess().getArgsAssignment_1()); }
	(rule__Volume__ArgsAssignment_1)
	{ after(grammarAccess.getVolumeAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workdir__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workdir__Group__0__Impl
	rule__Workdir__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkdirAccess().getCmdAssignment_0()); }
	(rule__Workdir__CmdAssignment_0)
	{ after(grammarAccess.getWorkdirAccess().getCmdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workdir__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkdirAccess().getArgsAssignment_1()); }
	(rule__Workdir__ArgsAssignment_1)
	{ after(grammarAccess.getWorkdirAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSONArgs__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_0__0__Impl
	rule__JSONArgs__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getJSONArgsAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_0__1__Impl
	rule__JSONArgs__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getArgsAssignment_0_1()); }
	(rule__JSONArgs__ArgsAssignment_0_1)
	{ after(grammarAccess.getJSONArgsAccess().getArgsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_0__2__Impl
	rule__JSONArgs__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getGroup_0_2()); }
	(rule__JSONArgs__Group_0_2__0)*
	{ after(grammarAccess.getJSONArgsAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getRightSquareBracketKeyword_0_3()); }
	']'
	{ after(grammarAccess.getJSONArgsAccess().getRightSquareBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSONArgs__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_0_2__0__Impl
	rule__JSONArgs__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getCommaKeyword_0_2_0()); }
	','
	{ after(grammarAccess.getJSONArgsAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getArgsAssignment_0_2_1()); }
	(rule__JSONArgs__ArgsAssignment_0_2_1)
	{ after(grammarAccess.getJSONArgsAccess().getArgsAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSONArgs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_1__0__Impl
	rule__JSONArgs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getJSONArgsAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONArgs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONArgsAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getJSONArgsAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpaceArgs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpaceArgs__Group__0__Impl
	rule__SpaceArgs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpaceArgs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceArgsAccess().getValueParserRuleCall_0()); }
	ruleValue
	{ after(grammarAccess.getSpaceArgsAccess().getValueParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpaceArgs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpaceArgs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpaceArgs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceArgsAccess().getValueParserRuleCall_1()); }
	(ruleValue)*
	{ after(grammarAccess.getSpaceArgsAccess().getValueParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameVal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameVal__Group_0__0__Impl
	rule__NameVal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameValAccess().getKeyAssignment_0_0()); }
	(rule__NameVal__KeyAssignment_0_0)
	{ after(grammarAccess.getNameValAccess().getKeyAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameVal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameValAccess().getValueAssignment_0_1()); }
	(rule__NameVal__ValueAssignment_0_1)
	{ after(grammarAccess.getNameValAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameVal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameVal__Group_1__0__Impl
	rule__NameVal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameValAccess().getKeyAssignment_1_0()); }
	(rule__NameVal__KeyAssignment_1_0)
	{ after(grammarAccess.getNameValAccess().getKeyAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameVal__Group_1__1__Impl
	rule__NameVal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameValAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getNameValAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameVal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameValAccess().getValueAssignment_1_2()); }
	(rule__NameVal__ValueAssignment_1_2)
	{ after(grammarAccess.getNameValAccess().getValueAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgArgs__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgArgs__Group_0__0__Impl
	rule__ArgArgs__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgArgs__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgArgsAccess().getArgArgsAction_0_0()); }
	()
	{ after(grammarAccess.getArgArgsAccess().getArgArgsAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgArgs__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgArgs__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgArgs__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgArgsAccess().getValueAssignment_0_1()); }
	(rule__ArgArgs__ValueAssignment_0_1)
	{ after(grammarAccess.getArgArgsAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HealthArgs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HealthArgs__Group_1__0__Impl
	rule__HealthArgs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHealthArgsAccess().getOptionsAssignment_1_0()); }
	(rule__HealthArgs__OptionsAssignment_1_0)
	{ after(grammarAccess.getHealthArgsAccess().getOptionsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HealthArgs__Group_1__1__Impl
	rule__HealthArgs__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHealthArgsAccess().getCMDKeyword_1_1()); }
	'CMD'
	{ after(grammarAccess.getHealthArgsAccess().getCMDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HealthArgs__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHealthArgsAccess().getCmdArgsAssignment_1_2()); }
	(rule__HealthArgs__CmdArgsAssignment_1_2)
	{ after(grammarAccess.getHealthArgsAccess().getCmdArgsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Options__Group__0__Impl
	rule__Options__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionsAccess().getOptionsAction_0()); }
	()
	{ after(grammarAccess.getOptionsAccess().getOptionsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Options__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionsAccess().getOptionsAssignment_1()); }
	(rule__Options__OptionsAssignment_1)*
	{ after(grammarAccess.getOptionsAccess().getOptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getHyphenMinusHyphenMinusKeyword_0()); }
	'--'
	{ after(grammarAccess.getOptionAccess().getHyphenMinusHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__1__Impl
	rule__Option__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getOptionAssignment_1()); }
	(rule__Option__OptionAssignment_1)
	{ after(grammarAccess.getOptionAccess().getOptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__2__Impl
	rule__Option__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getOptionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getValueAssignment_3()); }
	(rule__Option__ValueAssignment_3)
	{ after(grammarAccess.getOptionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Docker__CommandsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDockerAccess().getCommandsCommandParserRuleCall_0()); }
		ruleCommand
		{ after(grammarAccess.getDockerAccess().getCommandsCommandParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getCmdADDKeyword_0_0()); }
		(
			{ before(grammarAccess.getAddAccess().getCmdADDKeyword_0_0()); }
			'ADD'
			{ after(grammarAccess.getAddAccess().getCmdADDKeyword_0_0()); }
		)
		{ after(grammarAccess.getAddAccess().getCmdADDKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getArgsCommandArgsParserRuleCall_1_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getAddAccess().getArgsCommandArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgAccess().getCmdARGKeyword_0_0()); }
		(
			{ before(grammarAccess.getArgAccess().getCmdARGKeyword_0_0()); }
			'ARG'
			{ after(grammarAccess.getArgAccess().getCmdARGKeyword_0_0()); }
		)
		{ after(grammarAccess.getArgAccess().getCmdARGKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgAccess().getArgsArgArgsParserRuleCall_1_0()); }
		ruleArgArgs
		{ after(grammarAccess.getArgAccess().getArgsArgArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCmdAccess().getCmdCMDKeyword_0_0()); }
		(
			{ before(grammarAccess.getCmdAccess().getCmdCMDKeyword_0_0()); }
			'CMD'
			{ after(grammarAccess.getCmdAccess().getCmdCMDKeyword_0_0()); }
		)
		{ after(grammarAccess.getCmdAccess().getCmdCMDKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCmdAccess().getArgsCommandArgsParserRuleCall_1_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getCmdAccess().getArgsCommandArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getCmdCOPYKeyword_0_0()); }
		(
			{ before(grammarAccess.getCopyAccess().getCmdCOPYKeyword_0_0()); }
			'COPY'
			{ after(grammarAccess.getCopyAccess().getCmdCOPYKeyword_0_0()); }
		)
		{ after(grammarAccess.getCopyAccess().getCmdCOPYKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getArgsCommandArgsParserRuleCall_1_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getCopyAccess().getArgsCommandArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntrypointAccess().getCmdENTRYPOINTKeyword_0_0()); }
		(
			{ before(grammarAccess.getEntrypointAccess().getCmdENTRYPOINTKeyword_0_0()); }
			'ENTRYPOINT'
			{ after(grammarAccess.getEntrypointAccess().getCmdENTRYPOINTKeyword_0_0()); }
		)
		{ after(grammarAccess.getEntrypointAccess().getCmdENTRYPOINTKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntrypointAccess().getArgsJSONArgsParserRuleCall_1_0()); }
		ruleJSONArgs
		{ after(grammarAccess.getEntrypointAccess().getArgsJSONArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvAccess().getCmdENVKeyword_0_0()); }
		(
			{ before(grammarAccess.getEnvAccess().getCmdENVKeyword_0_0()); }
			'ENV'
			{ after(grammarAccess.getEnvAccess().getCmdENVKeyword_0_0()); }
		)
		{ after(grammarAccess.getEnvAccess().getCmdENVKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvAccess().getArgsNameValsParserRuleCall_1_0()); }
		ruleNameVals
		{ after(grammarAccess.getEnvAccess().getArgsNameValsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeAccess().getCmdEXPOSEKeyword_0_0()); }
		(
			{ before(grammarAccess.getExposeAccess().getCmdEXPOSEKeyword_0_0()); }
			'EXPOSE'
			{ after(grammarAccess.getExposeAccess().getCmdEXPOSEKeyword_0_0()); }
		)
		{ after(grammarAccess.getExposeAccess().getCmdEXPOSEKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeAccess().getArgsExposeArgsParserRuleCall_1_0()); }
		ruleExposeArgs
		{ after(grammarAccess.getExposeAccess().getArgsExposeArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getCmdFROMKeyword_0_0()); }
		(
			{ before(grammarAccess.getFromAccess().getCmdFROMKeyword_0_0()); }
			'FROM'
			{ after(grammarAccess.getFromAccess().getCmdFROMKeyword_0_0()); }
		)
		{ after(grammarAccess.getFromAccess().getCmdFROMKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getArgsCommandArgsParserRuleCall_1_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getFromAccess().getArgsCommandArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Healthcheck__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthcheckAccess().getCmdHEALTHCHECKKeyword_0_0()); }
		(
			{ before(grammarAccess.getHealthcheckAccess().getCmdHEALTHCHECKKeyword_0_0()); }
			'HEALTHCHECK'
			{ after(grammarAccess.getHealthcheckAccess().getCmdHEALTHCHECKKeyword_0_0()); }
		)
		{ after(grammarAccess.getHealthcheckAccess().getCmdHEALTHCHECKKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Healthcheck__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthcheckAccess().getArgsHealthArgsParserRuleCall_1_0()); }
		ruleHealthArgs
		{ after(grammarAccess.getHealthcheckAccess().getArgsHealthArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getCmdLABELKeyword_0_0()); }
		(
			{ before(grammarAccess.getLabelAccess().getCmdLABELKeyword_0_0()); }
			'LABEL'
			{ after(grammarAccess.getLabelAccess().getCmdLABELKeyword_0_0()); }
		)
		{ after(grammarAccess.getLabelAccess().getCmdLABELKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getArgsNameValsParserRuleCall_1_0()); }
		ruleNameVals
		{ after(grammarAccess.getLabelAccess().getArgsNameValsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaintainerAccess().getCmdMAINTAINERKeyword_0_0()); }
		(
			{ before(grammarAccess.getMaintainerAccess().getCmdMAINTAINERKeyword_0_0()); }
			'MAINTAINER'
			{ after(grammarAccess.getMaintainerAccess().getCmdMAINTAINERKeyword_0_0()); }
		)
		{ after(grammarAccess.getMaintainerAccess().getCmdMAINTAINERKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaintainerAccess().getArgsValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getMaintainerAccess().getArgsValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnbuildAccess().getCmdONBUILDKeyword_0_0()); }
		(
			{ before(grammarAccess.getOnbuildAccess().getCmdONBUILDKeyword_0_0()); }
			'ONBUILD'
			{ after(grammarAccess.getOnbuildAccess().getCmdONBUILDKeyword_0_0()); }
		)
		{ after(grammarAccess.getOnbuildAccess().getCmdONBUILDKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnbuildAccess().getArgsIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOnbuildAccess().getArgsIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunAccess().getCmdRUNKeyword_0_0()); }
		(
			{ before(grammarAccess.getRunAccess().getCmdRUNKeyword_0_0()); }
			'RUN'
			{ after(grammarAccess.getRunAccess().getCmdRUNKeyword_0_0()); }
		)
		{ after(grammarAccess.getRunAccess().getCmdRUNKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunAccess().getArgsCommandArgsParserRuleCall_1_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getRunAccess().getArgsCommandArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shell__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShellAccess().getCmdSHELLKeyword_0_0()); }
		(
			{ before(grammarAccess.getShellAccess().getCmdSHELLKeyword_0_0()); }
			'SHELL'
			{ after(grammarAccess.getShellAccess().getCmdSHELLKeyword_0_0()); }
		)
		{ after(grammarAccess.getShellAccess().getCmdSHELLKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shell__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShellAccess().getArgsJSONArgsParserRuleCall_1_0()); }
		ruleJSONArgs
		{ after(grammarAccess.getShellAccess().getArgsJSONArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopSignal__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopSignalAccess().getCmdSTOPSIGNALKeyword_0_0()); }
		(
			{ before(grammarAccess.getStopSignalAccess().getCmdSTOPSIGNALKeyword_0_0()); }
			'STOPSIGNAL'
			{ after(grammarAccess.getStopSignalAccess().getCmdSTOPSIGNALKeyword_0_0()); }
		)
		{ after(grammarAccess.getStopSignalAccess().getCmdSTOPSIGNALKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopSignal__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopSignalAccess().getArgsSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStopSignalAccess().getArgsSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__User__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserAccess().getCmdUSERKeyword_0_0()); }
		(
			{ before(grammarAccess.getUserAccess().getCmdUSERKeyword_0_0()); }
			'USER'
			{ after(grammarAccess.getUserAccess().getCmdUSERKeyword_0_0()); }
		)
		{ after(grammarAccess.getUserAccess().getCmdUSERKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__User__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserAccess().getArgsValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getUserAccess().getArgsValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVolumeAccess().getCmdVOLUMEKeyword_0_0()); }
		(
			{ before(grammarAccess.getVolumeAccess().getCmdVOLUMEKeyword_0_0()); }
			'VOLUME'
			{ after(grammarAccess.getVolumeAccess().getCmdVOLUMEKeyword_0_0()); }
		)
		{ after(grammarAccess.getVolumeAccess().getCmdVOLUMEKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVolumeAccess().getArgsCommandArgsParserRuleCall_1_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getVolumeAccess().getArgsCommandArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkdirAccess().getCmdWORKDIRKeyword_0_0()); }
		(
			{ before(grammarAccess.getWorkdirAccess().getCmdWORKDIRKeyword_0_0()); }
			'WORKDIR'
			{ after(grammarAccess.getWorkdirAccess().getCmdWORKDIRKeyword_0_0()); }
		)
		{ after(grammarAccess.getWorkdirAccess().getCmdWORKDIRKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkdirAccess().getArgsValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getWorkdirAccess().getArgsValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__ArgsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONArgsAccess().getArgsSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSONArgsAccess().getArgsSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONArgs__ArgsAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONArgsAccess().getArgsSTRINGTerminalRuleCall_0_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSONArgsAccess().getArgsSTRINGTerminalRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVals__ValuesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameValsAccess().getValuesNameValParserRuleCall_0()); }
		ruleNameVal
		{ after(grammarAccess.getNameValsAccess().getValuesNameValParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__KeyAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameValAccess().getKeyIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNameValAccess().getKeyIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameValAccess().getValueValueParserRuleCall_0_1_0()); }
		ruleValue
		{ after(grammarAccess.getNameValAccess().getValueValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__KeyAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameValAccess().getKeyIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNameValAccess().getKeyIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameVal__ValueAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameValAccess().getValueValueParserRuleCall_1_2_0()); }
		ruleValue
		{ after(grammarAccess.getNameValAccess().getValueValueParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgArgs__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgArgsAccess().getValueValueParserRuleCall_0_1_0()); }
		ruleValue
		{ after(grammarAccess.getArgArgsAccess().getValueValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgArgs__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgArgsAccess().getValuesNameValsParserRuleCall_1_0()); }
		ruleNameVals
		{ after(grammarAccess.getArgArgsAccess().getValuesNameValsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__TypAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthArgsAccess().getTypNoneKeyword_0_0()); }
		(
			{ before(grammarAccess.getHealthArgsAccess().getTypNoneKeyword_0_0()); }
			'None'
			{ after(grammarAccess.getHealthArgsAccess().getTypNoneKeyword_0_0()); }
		)
		{ after(grammarAccess.getHealthArgsAccess().getTypNoneKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__OptionsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthArgsAccess().getOptionsOptionsParserRuleCall_1_0_0()); }
		ruleOptions
		{ after(grammarAccess.getHealthArgsAccess().getOptionsOptionsParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HealthArgs__CmdArgsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthArgsAccess().getCmdArgsCommandArgsParserRuleCall_1_2_0()); }
		ruleCommandArgs
		{ after(grammarAccess.getHealthArgsAccess().getCmdArgsCommandArgsParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__OptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionsAccess().getOptionsOptionParserRuleCall_1_0()); }
		ruleOption
		{ after(grammarAccess.getOptionsAccess().getOptionsOptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__OptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getOptionIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOptionAccess().getOptionIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getValueValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getOptionAccess().getValueValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExposeArgs__PortsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeArgsAccess().getPortsExposeArgParserRuleCall_0()); }
		ruleExposeArg
		{ after(grammarAccess.getExposeArgsAccess().getPortsExposeArgParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExposeArg__PortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeArgAccess().getPortINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getExposeArgAccess().getPortINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExposeArg__Port_protocolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeArgAccess().getPort_protocolEXPOSE_PORT_PROTOCOLTerminalRuleCall_1_0()); }
		RULE_EXPOSE_PORT_PROTOCOL
		{ after(grammarAccess.getExposeArgAccess().getPort_protocolEXPOSE_PORT_PROTOCOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_EXPOSE_PORT_PROTOCOL : ('0'..'9')+ '/' ('a'..'z'|'_'|'-')+;

RULE_RAW_VALUE : ('a'..'z'|'A'..'Z'|'_'|'-'|'/'|'.'|'\\') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9'|'/'|'.'|'\\'|':')*;

RULE_SH_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
